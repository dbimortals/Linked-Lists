#include <stdio.h>
#include <stdlib.h>
struct Node
{
    int data;
    struct Node *next;
};

struct Node *creatNode(int data)
{
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void insertAtBeginnimg(struct Node **head, int data)
{
    struct Node *newNode = creatNode(data);
    newNode->next = *head;
    *head = newNode;
}
void insertAtEnd(struct Node **head, int data)
{
    struct Node *newNode = creatNode(data);
    if (*head == NULL)
    {
        *head = newNode;
        return;
    }
    struct Node *temp = *head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = newNode;
}
void deleteNode(struct Node **head, int key)
{
    struct Node *temp = *head;
    struct Node *prev = NULL;
    if (temp != NULL && temp->data == key)
    {
        *head = temp->next;
        free(temp);
        return;
    }
    while (temp != NULL && temp->data != key)
    {
        prev = temp;
        temp = temp->next;
    }
    if (temp == NULL)
        return;
    prev->next = temp->next;
    free(temp);
}
int searchNode(struct Node *head, int key)
{
    struct Node *temp = head;
    while (temp != NULL)
    {
        if (temp->data == key)
            return 1;
        temp = temp->next;
    }
    return 0;
}
void printList(struct Node *head)
{
    struct Node *temp = head;
    while (temp != NULL)
    {
        printf("%d->", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}
int main()
{
    struct Node *head = NULL;

    insertAtEnd(&head, 06);
    insertAtEnd(&head, 20);
    insertAtEnd(&head, 30);
    // insertAtBeginning( &head,5);
    printf(" Linked List :");
    printList(head);

    deleteNode(&head, 20);
    printf("After deletion of 20 :");
    printList(head);
    int key = 10;
    if (searchNode(head, key))
        printf("Node with value %d found.\n", key);
    else
        printf("Node with value %d not found.\n", key);
    return 0;
}
